@{
    ViewData["Title"] = "Register";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MathXGame</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        /* Custom styles for register page */
        body {
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 400px;
            margin: 100px auto;
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

        h2 {
            color: #343a40;
            text-align: center;
            margin-bottom: 30px;
        }

        label {
            color: #343a40;
            font-weight: bold;
        }

        input[type="text"],
        input[type="password"],
        input[type="email"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ced4da;
            border-radius: 5px;
        }

        button[type="submit"] {
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            color: #fff;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button[type="submit"]:hover {
            background-color: #0056b3;
        }

        .login-link {
            display: block;
            text-align: center;
            margin-top: 20px;
            color: #007bff;
            font-weight: bold;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Register</h2>

	 <form id="registrationForm" asp-controller="Account" asp-action="Register" method="post" onsubmit="validateForm(event)">
            <div>
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" onfocus="showUsernameRules()" onblur="validateUsername()" />
                <span id="usernameMessage"></span>
            </div>
            <div>
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" onfocus="showPasswordRules()" onblur="validatePassword()" />
                <span id="passwordMessage"></span>
            </div>
            <div>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" onfocus="showEmailRules()" onblur="validateEmail()" />
                <span id="emailMessage"></span>
            </div>
            <button type="submit">Register</button>
        </form>

        <a href="@Url.Action("Login", "Account")" class="login-link">Already have an account? Login here</a>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>

		'use strict';
		// Validate the entire form on submit
		function validateForm(event) {
			validateUsername();  // Hoisting
			validatePassword();
			validateEmail();

			// Check if there are any error messages
			const usernameMessage = document.getElementById('usernameMessage').style.color;
			const passwordMessage = document.getElementById('passwordMessage').style.color;
			const emailMessage = document.getElementById('emailMessage').style.color;

			if (usernameMessage === 'green' && passwordMessage === 'green' && emailMessage === 'green') {
				// Show loading spinner before submitting the form
				const spinner = document.createElement('img');
				spinner.src = 'Images/Account/Success.gif'; // Replace with the path to your loading spinner image
				spinner.alt = 'Loading...';
				document.getElementById('registrationForm').appendChild(spinner);

				// Simulate form submission after a short delay (e.g., 2 seconds)
				setTimeout(function() {
					// Your actual form submission logic here
					// For demonstration, let's assume the form is submitted successfully
					alert('Form submitted successfully!');
					spinner.remove(); // Remove the loading spinner
				}, 2000);

				document.getElementById('registrationForm').submit(); 
			} else {
				event.preventDefault();
			}
		}

		// Hoisting
		document.getElementById('registrationForm').onsubmit = validateForm;


		// Show rules when the input field is focused
		function showUsernameRules() {
			document.getElementById('usernameMessage').textContent = 'Username must be 5-15 characters long and contain only alphanumeric characters.';
			document.getElementById('usernameMessage').style.color = 'black';
		}

		function showPasswordRules() {
			document.getElementById('passwordMessage').textContent = 'Password must be at least 8 characters long, contain an uppercase letter, a lowercase letter, a digit, and a special character.';
			document.getElementById('passwordMessage').style.color = 'black';
		}

		function showEmailRules() {
			document.getElementById('emailMessage').textContent = 'Please enter a valid email address (e.g., user@example.com).';
			document.getElementById('emailMessage').style.color = 'black';
		}

		// Validate fields on blur
		function validateUsername() {
			const username = document.getElementById('username').value;
			const message = document.getElementById('usernameMessage');
			const errorImg = document.getElementById('usernameErrorImg');
			const successImg = document.getElementById('usernameSuccessImg');
			const regex = /^[a-zA-Z0-9]{5,15}$/;
			if (regex.test(username)) {
				message.textContent = 'Username is valid.';
				message.style.color = 'green';
				errorImg.style.display = 'none';
				successImg.style.display = 'inline';
			} else {
				message.textContent = 'Invalid username. Must be 5-15 alphanumeric characters.';
				message.style.color = 'red';
				errorImg.style.display = 'inline';
				successImg.style.display = 'none';
			}
		}

		function validatePassword() {
			const password = document.getElementById('password').value;
			const message = document.getElementById('passwordMessage');
			const errorImg = document.getElementById('passwordErrorImg');
			const successImg = document.getElementById('passwordSuccessImg');
			const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{8,}$/;
			if (regex.test(password)) {
				message.textContent = 'Password is valid.';
				message.style.color = 'green';
				errorImg.style.display = 'none';
				successImg.style.display = 'inline';
			} else {
				message.textContent = 'Invalid password. Follow the rules.';
				message.style.color = 'red';
				errorImg.style.display = 'inline';
				successImg.style.display = 'none';
			}
		}

		function validateEmail() {
			const email = document.getElementById('email').value;
			const message = document.getElementById('emailMessage');
			const errorImg = document.getElementById('emailErrorImg');
			const successImg = document.getElementById('emailSuccessImg');
			const regex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
			if (regex.test(email)) {
				message.textContent = 'Email is valid.';
				message.style.color = 'green';
				errorImg.style.display = 'none';
				successImg.style.display = 'inline';
			} else {
				message.textContent = 'Invalid email address.';
				message.style.color = 'red';
				errorImg.style.display = 'inline';
				successImg.style.display = 'none';
			}
		}


    </script>
</body>
</html>

