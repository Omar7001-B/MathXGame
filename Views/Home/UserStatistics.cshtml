@model MathXGame.Controllers.UserStatisticsViewModel

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Statistics - MathXGame</title>
  <style>
    body {
      font-family: sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f5f5f5;
    }

    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      border-radius: 5px;
      background-color: #fff;
    }

    .heading {
      text-align: center;
      font-size: 2rem;
      margin-bottom: 1rem;
      color: #3498db;
    }

    .card {
      background-color: #fff;
      border-radius: 5px;
      margin-bottom: 20px;
      padding: 20px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease;
    }

    .card:hover {
      transform: scale(1.02);
    }

    .card-title {
      font-size: 1.2rem;
      font-weight: bold;
      margin-bottom: 10px;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .card-title svg {
      height: 20px;
      width: 20px;
      fill: #3498db;
    }

    .stats-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .stats-list li {
      margin-bottom: 5px;
      display: flex;
      justify-content: space-between;
      font-weight: lighter;
    }

    .stats-list li span:first-child {
      color: #333;
    }

    .challenge-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .challenge-list li {
      margin-bottom: 15px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .challenge-title {
      text-decoration: none;
      color: #3498db;
      font-size: 1.1rem;
      font-weight: bold;
      display: inline-block;
      border-bottom: 2px solid transparent;
      transition: border-bottom 0.3s ease;
    }

    .challenge-title:hover {
      border-bottom: 2px solid #3498db;
    }

    .arrow-up {
      color: green;
    }

    .arrow-down {
      color: red;
    }

    .hidden-details {
      display: none;
      transition: all 0.3s ease;
    }

    .button-container {
      display: flex;
      justify-content: space-between;
      margin-top: 20px;
    }

    .button {
      background-color: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .button:hover {
      background-color: #2980b9;
    }

    .date-header {
      background-color: #ecf0f1;
      padding: 10px;
      border-radius: 5px;
      margin-top: 20px;
      margin-bottom: 10px;
      text-align: center;
      font-weight: bold;
    }

    .challenge-card {
      border: 1px solid #ddd;
      border-radius: 5px;
      padding: 15px;
      margin-bottom: 10px;
      transition: box-shadow 0.3s ease;
    }

    .challenge-card:hover {
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .toggle-icon {
      cursor: pointer;
      font-size: 1.5rem;
      margin-right: 10px;
      transition: transform 0.3s ease;
    }

    .toggle-icon.open {
      transform: rotate(90deg);
    }

    .stat-label {
      color: #34495e;
    }

    .stat-value {
      color: #2c3e50;
    }
  </style>
</head>
<body>

<div class="container">
  <h1 class="heading">🏆 Your Math Stats 🏆</h1>

  <section class="card general-stats">
    <h3 class="card-title">General Statistics 📊</h3>
    <ul class="stats-list">
      <li><span class="stat-label">📅 Total Challenges:</span> <span class="stat-value">@Model.TotalChallenges</span></li>
      <li><span class="stat-label">✅ Completed Challenges:</span> <span class="stat-value">@Model.CompletedChallenges</span></li>
      <li><span class="stat-label">❌ Incomplete Challenges:</span> <span class="stat-value">@Model.IncompleteChallenges</span></li>
      <li><span class="stat-label">🏅 Best Performance:</span> <span class="stat-value">@Model.BestPerformance</span></li>
      <li><span class="stat-label">📈 Average Performance:</span> <span class="stat-value">@Model.AveragePerformance</span></li>
      <li><span class="stat-label">⏱️ Total Time Spent:</span> <span class="stat-value">@Model.TotalTimeSpent hrs</span></li>
      <li><span class="stat-label">⚡️ Average Speed:</span> <span class="stat-value">@Model.AverageSpeed s/problem</span></li>
      <li><span class="stat-label">🎯 Average Accuracy:</span> <span class="stat-value">@Model.AverageAccuracy %</span></li>
      <li><span class="stat-label">⭐️ Average Score:</span> <span class="stat-value">@Model.AverageScore</span></li>
    </ul>
  </section>

  <section class="card problem-stats">
    <h3 class="card-title">Problem-Specific Statistics 📈</h3>
    <ul class="stats-list">
      <li><span class="stat-label">📊 Total Problems Solved:</span> <span class="stat-value">@Model.TotalProblemsSolved</span></li>
      <li><span class="stat-label">➕ Addition Problems Solved:</span> <span class="stat-value">@Model.AdditionProblemsSolved</span></li>
      <li><span class="stat-label">➖ Subtraction Problems Solved:</span> <span class="stat-value">@Model.SubtractionProblemsSolved</span></li>
      <li><span class="stat-label">✖️ Multiplication Problems Solved:</span> <span class="stat-value">@Model.MultiplicationProblemsSolved</span></li>
      <li><span class="stat-label">➗ Division Problems Solved:</span> <span class="stat-value">@Model.DivisionProblemsSolved</span></li>
      <br />
      <br />
      <li><span class="stat-label">Average Time per Problem Type 🚀:</span></li>
      @foreach (var item in Model.AverageTimePerProblemType)
      {
        <li><span class="stat-label">🕰 @item.Key:</span> <span class="stat-value">@item.Value s/problem</span></li>
      }
    </ul>
  </section>

  <section class="card challenge-history">
    <h3 class="card-title">📅 Challenge History</h3>
    @foreach (var day in Model.ChallengeHistory.GroupBy(c => c.StartTime.Date))
    {
      <div class="date-header">@day.Key.ToString("dddd, MMMM dd, yyyy")</div>
      <ul class="challenge-list">
        @foreach (var challenge in day)
        {
            <div class="challenge-card">
              <li>
                <span>
                  <span class="toggle-icon" onclick="document.getElementById('@challenge.ChallengeId').classList.toggle('hidden-details'); this.classList.toggle('open')">►</span>
                  <a href="@Url.Action("ViewChallenge", "Challenges", new {id  = challenge.ChallengeId})" class="challenge-title">
                    🕒 @challenge.StartTime.ToString("HH:mm") @challenge.SelectedChallenge
                  </a>
                </span>
                @{
                  var speedColor = challenge.Speed < Model.AverageSpeed ? "green" : "red";
                  var emoji = challenge.Speed < Model.AverageSpeed ? "⇪" : "⇘";
                }
                <span style="color:@speedColor">@challenge.Speed s/problem @emoji</span>
              </li>
              <div id="@challenge.ChallengeId" class="hidden-details">
                <p>🏆 Score: @challenge.Score</p>
                <p>✅ Problems Solved: @challenge.SolvedProblems </p>
                <p>🔻 Misses: @challenge.Misses</p>
                <p>📏 Number Range: @challenge.MinNumber - @challenge.MaxNumber</p>
                <p>🔨 Operations:
                  @(challenge.Addition ? "➕" : "")
                  @(challenge.Subtraction ? "➖" : "")
                  @(challenge.Multiplication ? "✖️" : "")
                  @(challenge.Division ? "➗" : "")
                </p>
              </div>
            </div>
        }
      </ul>
    }
  </section>

  <div class="button-container">
    <button class="button" onclick="window.location.href = '@Url.Action("Index", "Home")'">Back</button>
    <button class="button" onclick="window.location.href = '@Url.Action("Index", "Challenges")'">New Challenge</button>
  </div>

</div>

</body>
</html>
